Anotações sobre as instruções do Git
TK:max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


Branch - Versoes diferentes do sistema
    Master -  Eh a versão principal

Comandos basicos:

    git status
        Varre a pasta e verifica o que foi modificado

    git add nome_do_arquivo
        Adiciona o arquivo ao monitoramento do git

    git add -A 
        Adiciona todos os arquivos intracked (nao monitorados) para o monitoramento do git

    git commit -m "Escreve o comentario"
        Envia as modificacoes

    git log
        Lista todos os commits feitos

    git branch
        Lista dos os branchs, o que * eh o branch atual

    git commit -am "Mensagem"
        Adiciona e ao mesmo tempo faz o commit

    git reset --soft/mixed/hard id_do_commit
        Reseta para um determinado ponto usando o id do commit (pode copiar todo o rash todo ou apenas os 7 primeiros digitos)
        Soft: Volta para o rash especificado, mas sem as alterações posteriores comitadas.
        Mixed: eh parecido com o soft, mas sera necessario dar o add novamente
        Hard: Vai ignorar todas as alterações posteriores

    git branch nome_do_branch_a_ser_criado
        Cria um novo branch, o novo branch criado tera todos os arquivos e modificacoes do branch atual. Dessa forma, pode ser feito versões diferentes do sistema e modifica-los ao mesmo tempo.

    git checkout nome_do_branch_que_se_deseja
        Muda para outro branch

    git diff
        Mostra as informacoes de todos os arquivos que foram modificados.

    git diff --name-only
        Mostra apenas o nome dos arquivos que foram modificados.

    git diff nome
        Mostra as alteracoes de um arquivo em especifico

    git checkout HEAD -- nome_do_arquivo_que_se_deseja_voltar_as_modificacoes
        Cancela as modificacoes encontradas no diff        
        HEAD -> pega o nome do branch atual, pode ser substituido pelo nome da branch atual
    
    git push nome_do_destino nome_do_branch - > git push origin master
        Enviar as informações para o servidor remoto.
    
    Ignorar arquivos
        Cria-se um arquivo '.ignore' e em seu conteudo coloca-se a lista dos nomes dos arquivos e pastas que serao ignorados pelo git
            nome_do_arquivo.extensao
            *.sql -> Ignora todos os arquivos com extensao .sql
            *.txt
            nome_da_pasta/* -> Ignora todos os arquivos dentro da pasta
            nome_da_pasta/  -> Ignora a pasta         
    


    


     

    
    
        

     

    
    
